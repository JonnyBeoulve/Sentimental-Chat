{"version":3,"file":"4.b6eec557d1295e704530.hot-update.js","sources":["webpack:///components/Chat.js"],"sourcesContent":["import React, { Component, Fragment } from 'react';\r\nimport axios from 'axios';\r\nimport Pusher from 'pusher-js';\r\nimport Link from 'next/link';\r\n\r\nimport ChatMessage from './ChatMessage';\r\n\r\nconst SAD_EMOJI = [55357, 56864];\r\nconst HAPPY_EMOJI = [55357, 56832];\r\nconst NEUTRAL_EMOJI = [55357, 56848];\r\n\r\n/*========================================================================\r\n// This component contains logic for chat.\r\n========================================================================*/\r\nclass Chat extends Component {\r\n\r\n    /*========================================================================\r\n    // Store the name of the current chatroom, an array of chat messages,\r\n    // and a boolean for determining whether to show the menu or chat.\r\n    ========================================================================*/\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            chatroom: '',\r\n            chats: [],\r\n            showMenu: false,\r\n        };\r\n    }\r\n\r\n    /*========================================================================\r\n    // Create Pusher object to provide API reference to Pusher services.\r\n    ========================================================================*/\r\n    componentDidMount() {\r\n        this.pusher = new Pusher(process.env.PUSHER_APP_KEY, {\r\n            cluster: process.env.PUSHER_APP_CLUSTER,\r\n            encrypted: true\r\n        });\r\n    }\r\n\r\n    /*========================================================================\r\n    // Disconnect from pusher when component is unmounted.\r\n    ========================================================================*/\r\n    componentWillUnmount() {\r\n        this.pusher.disconnect();\r\n    }\r\n\r\n    /*========================================================================\r\n    // This will handle subscription to the various chat channels that\r\n    // Sentimental Chat offers. First, we will unregister the current\r\n    // subscription if one exists before resetting chat state and setting\r\n    // a name for chatroom. Then, we will subscribe to the corresponding\r\n    // channel and create bindings to Pusher.\r\n    ========================================================================*/\r\n    handleChangeChannel = channelName => {\r\n        if (this.state.chatroom.length > 0) this.pusher.unsubscribe(this.state.chatroom);\r\n\r\n        this.channel = this.pusher.subscribe(channelName);\r\n        \r\n        this.setState({ \r\n            chatroom: channelName,\r\n            chats: [],\r\n            showIntroHeader: true,\r\n        });\r\n\r\n        this.channel.bind('new-message', ({ chat = null }) => {\r\n            const { chats } = this.state;\r\n            chat && chats.push(chat);\r\n            this.setState({ \r\n                chats,\r\n                showMenu: false \r\n             });\r\n        });\r\n\r\n        axios.post('/messages')\r\n            .then(response => {\r\n                const chats = response.data.messages;\r\n                this.setState({ \r\n                    chats,\r\n                    showMenu: false \r\n                });\r\n            })\r\n            .catch(error => {\r\n                console.log('Connection bind failed. ' + error);\r\n            });\r\n    }\r\n\r\n    /*========================================================================\r\n    // Handle event when user has a chat message and presses enter to send\r\n    // it to the server.\r\n    ========================================================================*/\r\n    handleKeyUp = evt => {\r\n        const value = evt.target.value;\r\n  \r\n        if (evt.keyCode === 13 && !evt.shiftKey) {\r\n          const { activeUser: user } = this.props;\r\n          const chat = { user, message: value, timestamp: + new Date };\r\n          const room = this.state.chatroom;\r\n  \r\n          evt.target.value = '';\r\n          axios.post('/message', {\r\n              chat, \r\n              room\r\n          });\r\n        }\r\n    }\r\n  \r\n    /*========================================================================\r\n    // Two states exist within the chat window. One displays a menu with\r\n    // buttons for toggling between each chat room. The other shows all\r\n    // chat that has occurred in the room while the user has been present.\r\n    // Each chat by a user includes a sentiment emoji.\r\n    ========================================================================*/\r\n    render() {\r\n        return (\r\n            this.props.activeUser && <Fragment>\r\n                <div className=\"border-bottom border-gray w-100 align-items-center bg-white\" style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between', height: 90 }}>\r\n                    <img src=\"https://i.pinimg.com/originals/56/f0/c7/56f0c7de57fdae6d0a9ddc43448b6dff.png\" style={{ height: 60, marginLeft: 20 }}>\r\n                    </img>\r\n                    <h2 className=\"text-dark mb-0 mx-4 px-2\">\r\n                        { (this.state.showMenu)\r\n                            ? <Fragment>\r\n                                Menu\r\n                            </Fragment>\r\n                            : <Fragment>\r\n                                {this.props.activeUser}\r\n                            </Fragment> }\r\n                    </h2>\r\n                    <img onClick={e => this.setState(prevState => ({ showMenu: !prevState.showMenu }))} src=\"https://www.shareicon.net/data/512x512/2017/02/09/878626_gear_512x512.png\" style={{ height: 60, marginRight: 20, cursor: 'pointer' }}>\r\n                    </img>\r\n                </div>\r\n                { (!this.state.showMenu)\r\n                    ? <Fragment>\r\n                        <div className=\"px-4 pb-4 w-100 d-flex flex-row flex-wrap align-items-start align-content-start position-relative\" style={{ height: 'calc(95% - 180px)', overflowY: 'scroll' }}>{this.state.chats.map((chat, index) => {\r\n                            const previous = Math.max(0, index - 1);\r\n                            const previousChat = this.state.chats[previous];\r\n                            const position = chat.user === this.props.activeUser ? \"right\" : \"left\";\r\n                            const isFirst = previous === index;\r\n                            const inSequence = chat.user === previousChat.user;\r\n                            const hasDelay = Math.ceil((chat.timestamp - previousChat.timestamp) / (1000 * 60)) > 1;\r\n                            const mood = chat.sentiment > 0 ? HAPPY_EMOJI : (chat.sentiment === 0 ? NEUTRAL_EMOJI : SAD_EMOJI);\r\n                            return (\r\n                                <Fragment key={index}>\r\n                                    { (isFirst || !inSequence || hasDelay) && (\r\n                                        <div className={`d-block w-100 font-weight-bold text-dark mt-4 pb-1 px-1 text-${position}`} style={{ fontSize: '1.2rem' }}>\r\n                                            <span>\r\n                                                {chat.user || 'Anonymous'}\r\n                                            </span>\r\n                                        </div>\r\n                                    ) }\r\n                                    <div className={`d-block w-100 mt-2 pb-1 px-1 text-${position}`} style={{ fontSize: '1.5rem' }}>\r\n                                        <span>\r\n                                            {String.fromCodePoint(...mood)}\r\n                                        </span>\r\n                                    </div>\r\n                                    <ChatMessage message={chat.message} position={position} />\r\n                                </Fragment>\r\n                            );\r\n                        })}</div>\r\n                        <div className=\"border-top border-gray w-100 px-4 d-flex align-items-center bg-light\" style={{ minHeight: 90 }}>\r\n                            <textarea className=\"form-control px-3 py-2\" onKeyUp={this.handleKeyUp} placeholder=\"Enter a chat message\" style={{ resize: 'none' }}></textarea>\r\n                        </div>\r\n                    </Fragment>\r\n                    : <Fragment>\r\n                        <div className=\"w-100 align-items-center\" style={{ display: 'flex', flexDirection: 'column', height: 'auto', color: '#FFF' }}>\r\n                            <button onClick={() => this.handleChangeChannel('general-chat')} style={{ display: 'block', width: '40%', margin: '5px', padding: '20px', backgroundColor: '#2A275E', color: '#fff', border: 'none', cursor: 'pointer' }}>General Chat</button>\r\n                            <button onClick={() => this.handleChangeChannel('gamer-chat')} style={{ display: 'block', width: '40%', margin: '5px', padding: '20px', backgroundColor: '#2A275E', color: '#fff', border: 'none', cursor: 'pointer' }}>Gamer Chat</button>\r\n                            <button onClick={() => this.handleChangeChannel('technology-chat')} style={{ display: 'block', width: '40%', margin: '5px', padding: '20px', backgroundColor: '#2A275E', color: '#fff', border: 'none', cursor: 'pointer' }}>Technology Chat</button>\r\n                            <button onClick={() => this.handleChangeChannel('rl-chat')} style={{ display: 'block', width: '40%', margin: '5px', padding: '20px', backgroundColor: '#2A275E', color: '#fff', border: 'none', cursor: 'pointer' }}>RL Chat</button>\r\n                            <button onClick={() => this.handleChangeChannel('introduction-chat')} style={{ display: 'block', width: '40%', margin: '5px', padding: '20px', backgroundColor: '#2A275E', color: '#fff', border: 'none', cursor: 'pointer' }}>Introduction Chat</button>\r\n                            <button onClick={() => this.handleChangeChannel('anything-chat')} style={{ display: 'block', width: '40%', margin: '5px', padding: '20px', backgroundColor: '#2A275E', color: '#fff', border: 'none', cursor: 'pointer' }}>Anything Chat</button>\r\n                        </div>\r\n                        <div className=\"w-100 align-items-center\" style={{ display: 'flex', flexDirection: 'column', height: 'auto', color: '#FFF' }}>\r\n                            <Link href={{ pathname: '/about' }}><button style={{ display: 'block', width: '40%', margin: '5px', padding: '20px', backgroundColor: '#2A275E', color: '#fff', border: 'none', cursor: 'pointer' }}>About</button></Link>\r\n                            <button onClick={this.props.signout} style={{ display: 'block', width: '40%', margin: '5px', padding: '20px', backgroundColor: '#2A275E', color: '#fff', border: 'none', cursor: 'pointer' }}>Signout</button>\r\n                        </div>\r\n                    </Fragment> }\r\n            </Fragment> \r\n        )\r\n    }\r\n}\r\n\r\nexport default Chat;\n\n\n// WEBPACK FOOTER //\n// components/Chat.js"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;;;;AAGA;;;;;AAEA;;;;AAIA;AAAA;AACA;AADA;AACA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAkCA;AAEA;AACA;AACA;AACA;AACA;AACA;AAHA;AACA;AAKA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AAFA;AAIA;AAEA;AACA;AACA;AAhEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAuEA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAFA;AAIA;AACA;AApFA;AAEA;AACA;AACA;AACA;AAHA;AAFA;AAOA;AAEA;;;;;;;AAGA;AACA;AACA;AACA;AAFA;AAIA;AAEA;;;;;;AAGA;AACA;AACA;AAEA;;;;;;;;;;;AA4DA;;;;;;AAMA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;;;;AApKA;AACA;AAsKA;;;;A","sourceRoot":""}