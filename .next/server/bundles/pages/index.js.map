{"version":3,"file":"bundles\\pages\\index.js","sources":["webpack:///webpack/bootstrap 82c1429d1d183d8fefa3","webpack:///components/Chat.js","webpack:///components/ChatMessage.js","webpack:///components/Layout.js","webpack:///pages/index.js","webpack:///external \"axios\"","webpack:///external \"next/head\"","webpack:///external \"next/link\"","webpack:///external \"pusher-js\"","webpack:///external \"react\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 82c1429d1d183d8fefa3","import React, { Component, Fragment } from 'react';\r\nimport axios from 'axios';\r\nimport Pusher from 'pusher-js';\r\nimport Link from 'next/link';\r\n\r\nimport ChatMessage from './ChatMessage';\r\n\r\nconst SAD_EMOJI = [55357, 56864];\r\nconst HAPPY_EMOJI = [55357, 56832];\r\nconst NEUTRAL_EMOJI = [55357, 56848];\r\n\r\n/*========================================================================\r\n// This component contains logic for chat.\r\n========================================================================*/\r\nclass Chat extends Component {\r\n\r\n    /*========================================================================\r\n    // Store the name of the current chatroom, an array of chat messages,\r\n    // and a boolean for determining whether to show the menu or chat.\r\n    ========================================================================*/\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            chatroom: '',\r\n            chats: [],\r\n            showMenu: true,\r\n        };\r\n    }\r\n\r\n    /*========================================================================\r\n    // Create Pusher object to provide API reference to Pusher services.\r\n    ========================================================================*/\r\n    componentDidMount() {\r\n        this.pusher = new Pusher(process.env.PUSHER_APP_KEY, {\r\n            cluster: process.env.PUSHER_APP_CLUSTER,\r\n            encrypted: true\r\n        });\r\n    }\r\n\r\n    /*========================================================================\r\n    // Disconnect from pusher when component is unmounted.\r\n    ========================================================================*/\r\n    componentWillUnmount() {\r\n        this.pusher.disconnect();\r\n    }\r\n\r\n    /*========================================================================\r\n    // This will handle subscription to the various chat channels that\r\n    // Sentimental Chat offers. First, we will unregister the current\r\n    // subscription if one exists before resetting chat state and setting\r\n    // a name for chatroom. Then, we will subscribe to the corresponding\r\n    // channel and create bindings to Pusher.\r\n    ========================================================================*/\r\n    handleChangeChannel = channelName => {\r\n        if (this.state.chatroom.length > 0) this.pusher.unsubscribe(this.state.chatroom);\r\n\r\n        this.channel = this.pusher.subscribe(channelName);\r\n        \r\n        this.setState({ \r\n            chatroom: channelName,\r\n            chats: [],\r\n            showIntroHeader: true,\r\n        });\r\n\r\n        this.channel.bind('new-message', ({ chat = null }) => {\r\n            const { chats } = this.state;\r\n            chat && chats.push(chat);\r\n            this.setState({ \r\n                chats,\r\n                showMenu: false \r\n             });\r\n        });\r\n\r\n        axios.post('/messages')\r\n            .then(response => {\r\n                const chats = response.data.messages;\r\n                this.setState({ \r\n                    chats,\r\n                    showMenu: false \r\n                });\r\n            })\r\n            .catch(error => {\r\n                console.log('Messages fetch failed. ' + error);\r\n            });\r\n    }\r\n\r\n    /*========================================================================\r\n    // Handle event when user has a chat message and presses enter to send\r\n    // it to the server.\r\n    ========================================================================*/\r\n    handleKeyUp = evt => {\r\n        const value = evt.target.value;\r\n  \r\n        if (evt.keyCode === 13 && !evt.shiftKey) {\r\n          const { activeUser: user } = this.props;\r\n          const chat = { user, message: value, timestamp: + new Date };\r\n          const room = this.state.chatroom;\r\n  \r\n          evt.target.value = '';\r\n          axios.post('/message', {\r\n              chat, \r\n              room\r\n          });\r\n        }\r\n    }\r\n  \r\n    /*========================================================================\r\n    // The Chat div is rendered on the right-side of the screen. Initially,\r\n    // it will display a top bar that instructs the user to 'Select a \r\n    // Chatroom', with a selection of rooms along with an About and Signout\r\n    // button. Once a user selects a chatroom, change the top bar to show\r\n    // a profile avatar, the name of the chatroom, and a menu button.\r\n    // Below is a list of chat messages within that chatroom. Upon clicking\r\n    // the menu button, display the same chatroom, about, and signout buttons\r\n    // as during the introduction.\r\n    ========================================================================*/\r\n    render() {\r\n        return (\r\n            this.props.activeUser && <Fragment>\r\n                { this.state.chatroom \r\n                    ? <div className=\"border-bottom border-gray w-100 align-items-center bg-white\" style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between', height: 90 }}>\r\n                        <img src=\"https://i.pinimg.com/originals/56/f0/c7/56f0c7de57fdae6d0a9ddc43448b6dff.png\" alt=\"Default avatar PNG\" style={{ height: 60, marginLeft: 20 }}>\r\n                        </img>\r\n                        <h2 className=\"text-dark mb-0 mx-4 px-2\">\r\n                            { (this.state.showMenu)\r\n                                ? <Fragment>\r\n                                    Menu\r\n                                </Fragment>\r\n                                : <Fragment>\r\n                                    {this.state.chatroom}\r\n                                </Fragment> }\r\n                        </h2>\r\n                        <img onClick={e => this.setState(prevState => ({ showMenu: !prevState.showMenu }))} src=\"https://www.shareicon.net/data/512x512/2017/02/09/878626_gear_512x512.png\" alt=\"Gear cog PNG\" style={{ height: 60, marginRight: 20, cursor: 'pointer' }}>\r\n                        </img>\r\n                    </div>\r\n                    : <div className=\"border-bottom border-gray w-100 align-items-center bg-white\" style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between', height: 90 }}>\r\n                        <img src=\"http://pixsector.com/cache/0688783e/avbf566659ab2bdf82f87.png\" alt=\"Down arrow PNG\" style={{ height: 60, marginRight: 20 }}>\r\n                        </img>\r\n                        <h2 className=\"text-dark mb-0 mx-4 px-2\">\r\n                            <Fragment>\r\n                                Select a Chatroom\r\n                            </Fragment>   \r\n                        </h2>\r\n                        <img src=\"http://pixsector.com/cache/0688783e/avbf566659ab2bdf82f87.png\" alt=\"Down arrow PNG\" style={{ height: 60, marginRight: 20 }}>\r\n                        </img>\r\n                    </div> }\r\n                { (!this.state.showMenu)\r\n                    ? <Fragment>\r\n                        <div className=\"px-4 pb-4 w-100 d-flex flex-row flex-wrap align-items-start align-content-start position-relative\" style={{ height: 'calc(95% - 180px)', overflowY: 'scroll' }}>{this.state.chats.map((chat, index) => {\r\n                            const previous = Math.max(0, index - 1);\r\n                            const previousChat = this.state.chats[previous];\r\n                            const position = chat.user === this.props.activeUser ? \"right\" : \"left\";\r\n                            const isFirst = previous === index;\r\n                            const inSequence = chat.user === previousChat.user;\r\n                            const hasDelay = Math.ceil((chat.timestamp - previousChat.timestamp) / (1000 * 60)) > 1;\r\n                            const mood = chat.sentiment > 0 ? HAPPY_EMOJI : (chat.sentiment === 0 ? NEUTRAL_EMOJI : SAD_EMOJI);\r\n                            return (\r\n                                <Fragment key={index}>\r\n                                    { (isFirst || !inSequence || hasDelay) && (\r\n                                        <div className={`d-block w-100 font-weight-bold text-dark mt-4 pb-1 px-1 text-${position}`} style={{ fontSize: '1.2rem' }}>\r\n                                            <span>\r\n                                                {chat.user || 'Anonymous'}\r\n                                            </span>\r\n                                        </div>\r\n                                    ) }\r\n                                    <div className={`d-block w-100 mt-2 pb-1 px-1 text-${position}`} style={{ fontSize: '1.5rem' }}>\r\n                                        <span>\r\n                                            {String.fromCodePoint(...mood)}\r\n                                        </span>\r\n                                    </div>\r\n                                    <ChatMessage message={chat.message} position={position} />\r\n                                </Fragment>\r\n                            );\r\n                        })}</div>\r\n                        <div className=\"border-top border-gray w-100 px-4 d-flex align-items-center bg-light\" style={{ minHeight: 90 }}>\r\n                            <textarea className=\"form-control px-3 py-2\" onKeyUp={this.handleKeyUp} placeholder=\"Enter a chat message\" style={{ resize: 'none' }}></textarea>\r\n                        </div>\r\n                    </Fragment>\r\n                    : <Fragment>\r\n                        <div className=\"w-100 align-items-center\" style={{ display: 'flex', flexDirection: 'column', height: 'auto', color: '#FFF' }}>\r\n                            <button onClick={() => this.handleChangeChannel('General-Chat')} style={{ display: 'block', width: '40%', margin: '5px', padding: '20px', backgroundColor: '#2A275E', color: '#fff', border: 'none', cursor: 'pointer' }}>General Chat</button>\r\n                            <button onClick={() => this.handleChangeChannel('Gamer-Chat')} style={{ display: 'block', width: '40%', margin: '5px', padding: '20px', backgroundColor: '#2A275E', color: '#fff', border: 'none', cursor: 'pointer' }}>Gamer Chat</button>\r\n                            <button onClick={() => this.handleChangeChannel('Technology-Chat')} style={{ display: 'block', width: '40%', margin: '5px', padding: '20px', backgroundColor: '#2A275E', color: '#fff', border: 'none', cursor: 'pointer' }}>Technology Chat</button>\r\n                            <button onClick={() => this.handleChangeChannel('RL-Chat')} style={{ display: 'block', width: '40%', margin: '5px', padding: '20px', backgroundColor: '#2A275E', color: '#fff', border: 'none', cursor: 'pointer' }}>RL Chat</button>\r\n                            <button onClick={() => this.handleChangeChannel('Introduction-Chat')} style={{ display: 'block', width: '40%', margin: '5px', padding: '20px', backgroundColor: '#2A275E', color: '#fff', border: 'none', cursor: 'pointer' }}>Introduction Chat</button>\r\n                        </div>\r\n                        <div className=\"w-100 align-items-center\" style={{ display: 'flex', flexDirection: 'column', height: 'auto', color: '#FFF' }}>\r\n                            <Link href={{ pathname: '/about' }}><button style={{ display: 'block', width: '40%', margin: '5px', padding: '20px', backgroundColor: '#2A275E', color: '#fff', border: 'none', cursor: 'pointer' }}>About</button></Link>\r\n                            <button onClick={this.props.signout} style={{ display: 'block', width: '40%', margin: '5px', padding: '20px', backgroundColor: '#2A275E', color: '#fff', border: 'none', cursor: 'pointer' }}>Signout</button>\r\n                        </div>\r\n                    </Fragment> }\r\n            </Fragment> \r\n        )\r\n    }\r\n}\r\n\r\nexport default Chat;\n\n\n// WEBPACK FOOTER //\n// components/Chat.js","import React, { Component } from 'react';\r\n\r\n/*========================================================================\r\n// This component is used for each individual message in a chat.\r\n========================================================================*/\r\nclass ChatMessage extends Component {\r\n\r\n    render() {\r\n        /*========================================================================\r\n        // Inline styling.\r\n        ========================================================================*/\r\n        const { position = 'left', message } = this.props;\r\n        const isRight = position.toLowerCase() === 'right';\r\n        const align = isRight ? 'text-right' : 'text-left';\r\n        const justify = isRight ? 'justify-content-end' : 'justify-content-start';\r\n\r\n        const messageBoxStyles = {\r\n            maxWidth: '70%',\r\n            flexGrow: 0\r\n        };\r\n\r\n        const messageStyles = {\r\n            fontWeight: 500,\r\n            lineHeight: 1.4,\r\n            whiteSpace: 'pre-wrap'\r\n        };\r\n\r\n        /*========================================================================\r\n        // Display message to the user.\r\n        ========================================================================*/\r\n        return (\r\n            <div className={`w-100 my-1 d-flex ${justify}`}>\r\n                <div className=\"bg-light rounded border border-gray p-2\" style={messageBoxStyles}>\r\n                    <span className={`d-block text-secondary ${align}`} style={messageStyles}>\r\n                        {message}\r\n                    </span>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ChatMessage;\n\n\n// WEBPACK FOOTER //\n// components/ChatMessage.js","import React, { Fragment } from 'react';\r\nimport Head from 'next/head';\r\n\r\n/*========================================================================\r\n// A wrapper that adds top-level styling to each page along with a next\r\n// and head component for meta information.\r\n========================================================================*/\r\nconst Layout = props => (\r\n  <Fragment>\r\n    <Head>\r\n      <meta charSet=\"utf-8\" />\r\n      <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\" />\r\n      <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css\" integrity=\"sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm\" crossOrigin=\"anonymous\" />\r\n      <title>{'Sentimental Chat'}</title>\r\n    </Head>\r\n    {props.children}\r\n  </Fragment>\r\n);\r\n\r\nexport default Layout;\n\n\n// WEBPACK FOOTER //\n// components/Layout.js","import React, { Component } from 'react';\r\n\r\nimport Chat from '../components/Chat';\r\nimport Layout from '../components/Layout';\r\n\r\n/*========================================================================\r\n// The main page of the app where core functionality is contained.\r\n========================================================================*/\r\nclass IndexPage extends Component {\r\n\r\n    /*========================================================================\r\n    // user will be set a value upon a name being provided. Chat functionality\r\n    // isn't available until this occurs, and thus will default to null.\r\n    ========================================================================*/\r\n    state = { \r\n        user: null \r\n    }\r\n\r\n    /*========================================================================\r\n    // Handle 'enter' key event on name input.\r\n    ========================================================================*/\r\n    handleKeyUp = evt => {\r\n        if (evt.keyCode === 13) {\r\n            const user = evt.target.value;\r\n            this.setState({ user });\r\n        }\r\n    }\r\n\r\n    /*========================================================================\r\n    // Set user back to null, removing the user from chat and placing them\r\n    // back at the introduction screen.\r\n    ========================================================================*/\r\n    handleSignout = evt => {\r\n        this.setState({ user: null });\r\n    }\r\n\r\n    /*========================================================================\r\n    // Render top level page with main screen on the left and menu/chat\r\n    // window on the right.\r\n    ========================================================================*/\r\n    render() {\r\n        const { user } = this.state;\r\n\r\n        /*========================================================================\r\n        // Inline styling.\r\n        ========================================================================*/\r\n        const nameInputStyles = {\r\n            background: 'transparent',\r\n            color: '#999',\r\n            border: 0,\r\n            borderBottom: '1px solid #666',\r\n            borderRadius: 0,\r\n            fontSize: '3rem',\r\n            fontWeight: 500,\r\n            boxShadow: 'none !important'\r\n        };\r\n\r\n        /*========================================================================\r\n        // Initially display enter name field. Once a name has been provided,\r\n        // display chat.\r\n        ========================================================================*/\r\n        return (\r\n            <Layout>\r\n                <main className=\"container-fluid position-absolute h-100\" style={{backgroundColor: '#2A275E'}}>\r\n                    <div className=\"row position-absolute w-100 h-100\">\r\n                        <section className=\"col-md-8 d-flex flex-row flex-wrap align-items-center align-content-center px-5\">\r\n                            <div className=\"px-5 mx-5\">\r\n                                <span className=\"d-block w-100 h1 text-light\" style={{marginTop: -50}}>\r\n                                    { (user)\r\n                                        ? ( <span>\r\n                                                <span style={{color: '#fff'}}>Welcome to Sentimental Chat,</span>\r\n                                                <br />\r\n                                                <span style={{color: '#aaa'}}>{this.state.user}</span>\r\n                                                <span style={{color: '#fff'}}>!</span>\r\n                                            </span>)\r\n                                        : `Enter a username below to begin.`\r\n                                    }\r\n                                </span>\r\n                                { !user && <input type=\"text\" className=\"form-control mt-3 px-3 py-2\" onKeyUp={this.handleKeyUp} autoComplete=\"off\" style={nameInputStyles} /> }\r\n                            </div>\r\n                        </section>\r\n                        <section className=\"col-md-4 position-relative d-flex flex-wrap h-100 align-items-start align-content-between px-0\" style={{backgroundColor: '#eee'}}>\r\n                            { user && <Chat activeUser={user} signout={this.handleSignout} /> }\r\n                        </section>\r\n                    </div>\r\n                </main>\r\n            </Layout>\r\n        );\r\n    }\r\n}\r\n\r\nexport default IndexPage;\n\n\n// WEBPACK FOOTER //\n// pages/index.js","module.exports = require(\"axios\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"axios\"\n// module id = axios\n// module chunks = 3","module.exports = require(\"next/head\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"next/head\"\n// module id = next/head\n// module chunks = 3 4","module.exports = require(\"next/link\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"next/link\"\n// module id = next/link\n// module chunks = 3 4","module.exports = require(\"pusher-js\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"pusher-js\"\n// module id = pusher-js\n// module chunks = 3","module.exports = require(\"react\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"react\"\n// module id = react\n// module chunks = 3 4"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;;;;AAGA;;;;;AAEA;;;;AAIA;AAAA;AACA;AADA;AACA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAkCA;AAEA;AACA;AACA;AACA;AACA;AACA;AAHA;AACA;AAKA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AAFA;AAIA;AAEA;AACA;AACA;AAhEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAuEA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAFA;AAIA;AACA;AApFA;AAEA;AACA;AACA;AACA;AAHA;AAFA;AAOA;AAEA;;;;;;;AAGA;AACA;AACA;AACA;AAFA;AAIA;AAEA;;;;;;AAGA;AACA;AACA;AAEA;;;;;;;;;;;AA4DA;;;;;;;;;;AAUA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;;;;AAnLA;AACA;AAqLA;;;;;;;;;;;;;;;;;;;;;;;;;;ACpMA;AAEA;;;;AAGA;;;;;;;;;;;;;AAEA;AACA;;;AADA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AAEA;AACA;AACA;AAFA;AAKA;AACA;AACA;AACA;AAHA;AAMA;;;;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;;;;AAlCA;AACA;AAoCA;;;;;;;;;;;;;AC1CA;AACA;AAEA;;;;;AAIA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AANA;AACA;AAWA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnBA;AAEA;AACA;AAEA;;;;AAGA;;;;;;;;;;;;;;;;;;;;AAMA;AACA;AAGA;;;;AAJA;;;;;AAOA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;;;;;AAMA;AACA;AAAA;AAAA;AACA;;;;;;;AAEA;;;;AAIA;AAAA;AAGA;;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAWA;;;;;AAIA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;;;;AAhFA;AACA;AAkFA;;;;;;;;;;;;;;;AC3FA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;A","sourceRoot":""}